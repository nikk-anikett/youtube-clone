{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniket\\\\Desktop\\\\Github\\\\youtube_clone\\\\src\\\\components\\\\Videos.jsx\";\nimport { Stack, Box } from '@mui/material';\nimport { VideoCard, ChannelCard } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videos = _ref => {\n  let {\n    videos,\n    direction\n  } = _ref;\n  if (!(videos !== null && videos !== void 0 && videos.length)) return 'Loading...';\n\n  // console.log(videos);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: direction || \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"start\",\n    gap: 2,\n    children: videos.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {\n      children: [item.id.videoId && /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 31\n      }, this), item.id.channelId && /*#__PURE__*/_jsxDEV(ChannelCard, {\n        channelDetail: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 33\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["Stack","Box","VideoCard","ChannelCard","Videos","videos","direction","length","map","item","idx","id","videoId","channelId"],"sources":["C:/Users/aniket/Desktop/Github/youtube_clone/src/components/Videos.jsx"],"sourcesContent":["import { Stack, Box } from '@mui/material';\r\nimport { VideoCard, ChannelCard } from './';\r\n\r\nconst Videos = ({ videos, direction }) => {\r\n  if(!videos?.length) return 'Loading...';\r\n\r\n  // console.log(videos);\r\n  return (\r\n    <Stack direction={ direction || \"row\" } flexWrap=\"wrap\" justifyContent=\"start\" gap={2}>\r\n      {videos.map((item, idx) => (\r\n        <Box key={idx}>\r\n          {item.id.videoId && <VideoCard video={item} />}\r\n          {item.id.channelId && <ChannelCard channelDetail={item} />}\r\n        </Box>\r\n      ))}\r\n\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Videos"],"mappings":";AAAA,SAASA,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAC1C,SAASC,SAAS,EAAEC,WAAW,QAAQ,IAAI;AAAC;AAE5C,MAAMC,MAAM,GAAG,QAA2B;EAAA,IAA1B;IAAEC,MAAM;IAAEC;EAAU,CAAC;EACnC,IAAG,EAACD,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEE,MAAM,GAAE,OAAO,YAAY;;EAEvC;EACA,oBACE,QAAC,KAAK;IAAC,SAAS,EAAGD,SAAS,IAAI,KAAO;IAAC,QAAQ,EAAC,MAAM;IAAC,cAAc,EAAC,OAAO;IAAC,GAAG,EAAE,CAAE;IAAA,UACnFD,MAAM,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACpB,QAAC,GAAG;MAAA,WACDD,IAAI,CAACE,EAAE,CAACC,OAAO,iBAAI,QAAC,SAAS;QAAC,KAAK,EAAEH;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,EAC7CA,IAAI,CAACE,EAAE,CAACE,SAAS,iBAAI,QAAC,WAAW;QAAC,aAAa,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,GAFlDC,GAAG;MAAA;MAAA;MAAA;IAAA,QAId;EAAC;IAAA;IAAA;IAAA;EAAA,QAEI;AAEZ,CAAC;AAAA,KAfKN,MAAM;AAiBZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}