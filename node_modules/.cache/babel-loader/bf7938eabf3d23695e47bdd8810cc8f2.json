{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniket\\\\Desktop\\\\Github\\\\youtube_clone\\\\src\\\\components\\\\VideoCard.jsx\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\nimport { CheckCircle } from \"@mui/icons-material\";\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelTitle, demoChannelUrl } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCard = _ref => {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n  let {\n    video: {\n      id: {\n        videoId\n      },\n      snippet\n    }\n  } = _ref;\n  // console.log(videoId, snippet);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        xs: '100%',\n        sm: '358px',\n        md: '320px'\n      },\n      boxShadow: 'none',\n      borderRadius: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : demoVideoUrl,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '350px',\n            md: '320px'\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        backgroundColor: '#1e1e1e',\n        height: '106px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: videoId ? `/video/${videoId}` : demoVideoUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          color: \"#FFF\",\n          children: (snippet === null || snippet === void 0 ? void 0 : snippet.title.slice(0, 60)) || demoVideoTitle.slice(0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: snippet !== null && snippet !== void 0 && snippet.channelId ? `/channel/${snippet === null || snippet === void 0 ? void 0 : snippet.channelId}` : demoChannelUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          fontWeight: \"bold\",\n          color: \"gray\",\n          children: [(snippet === null || snippet === void 0 ? void 0 : snippet.channelTitle) || demoChannelTitle, /*#__PURE__*/_jsxDEV(CheckCircle, {\n            sx: {\n              fontSize: 12,\n              color: 'gray',\n              ml: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = VideoCard;\nexport default VideoCard;\nvar _c;\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["Link","Typography","Card","CardContent","CardMedia","CheckCircle","demoThumbnailUrl","demoVideoUrl","demoVideoTitle","demoChannelTitle","demoChannelUrl","VideoCard","video","id","videoId","snippet","width","xs","sm","md","boxShadow","borderRadius","thumbnails","high","url","title","height","backgroundColor","slice","channelId","channelTitle","fontSize","color","ml"],"sources":["C:/Users/aniket/Desktop/Github/youtube_clone/src/components/VideoCard.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\"\r\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\"\r\nimport { CheckCircle } from \"@mui/icons-material\"\r\n\r\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelTitle, demoChannelUrl } from \"../utils/constants\"\r\n\r\nconst VideoCard = ({ video: { id: { videoId }, snippet } }) => {\r\n  // console.log(videoId, snippet);\r\n  return (\r\n    <Card sx={{ width: { xs: '100%', sm: '358px', md: '320px' }, boxShadow: 'none', borderRadius: 0}}>\r\n      <Link to={videoId ?   `/video/${videoId}` : demoVideoUrl}>\r\n        <CardMedia\r\n        \r\n         image={snippet?.thumbnails?.high?.url} \r\n         alt={snippet?.title}\r\n         sx={{width: {\r\n         xs: '100%', sm: '350px', md: '320px'\r\n         }, height: 180 }} />\r\n      </Link>\r\n      <CardContent sx={{backgroundColor: '#1e1e1e', height: '106px'}} >\r\n      <Link to={videoId ?   `/video/${videoId}` : demoVideoUrl}>\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#FFF\">\r\n          {snippet?.title.slice(0,60) || demoVideoTitle.slice(0,60)}\r\n        </Typography>\r\n      </Link>\r\n      <Link to={snippet?.channelId ?   `/channel/${snippet?.channelId}` : demoChannelUrl}>\r\n        <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"gray\">\r\n          {snippet?.channelTitle || demoChannelTitle}\r\n          <CheckCircle sx={{fontSize: 12, color: 'gray', ml: '5px'}} />\r\n        </Typography>\r\n      </Link>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default VideoCard"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AACxE,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,SAASC,gBAAgB,EAAEC,YAAY,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,oBAAoB;AAAA;AAErH,MAAMC,SAAS,GAAG,QAA6C;EAAA;EAAA,IAA5C;IAAEC,KAAK,EAAE;MAAEC,EAAE,EAAE;QAAEC;MAAQ,CAAC;MAAEC;IAAQ;EAAE,CAAC;EACxD;EACA,oBACE,QAAC,IAAI;IAAC,EAAE,EAAE;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAE,MAAM;QAAEC,EAAE,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAQ,CAAC;MAAEC,SAAS,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAC,CAAE;IAAA,wBAC/F,QAAC,IAAI;MAAC,EAAE,EAAEP,OAAO,GAAM,UAASA,OAAQ,EAAC,GAAGP,YAAa;MAAA,uBACvD,QAAC,SAAS;QAET,KAAK,EAAEQ,OAAO,aAAPA,OAAO,8CAAPA,OAAO,CAAEO,UAAU,iFAAnB,oBAAqBC,IAAI,0DAAzB,sBAA2BC,GAAI;QACtC,GAAG,EAAET,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,KAAM;QACpB,EAAE,EAAE;UAACT,KAAK,EAAE;YACZC,EAAE,EAAE,MAAM;YAAEC,EAAE,EAAE,OAAO;YAAEC,EAAE,EAAE;UAC7B,CAAC;UAAEO,MAAM,EAAE;QAAI;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChB,eACP,QAAC,WAAW;MAAC,EAAE,EAAE;QAACC,eAAe,EAAE,SAAS;QAAED,MAAM,EAAE;MAAO,CAAE;MAAA,wBAC/D,QAAC,IAAI;QAAC,EAAE,EAAEZ,OAAO,GAAM,UAASA,OAAQ,EAAC,GAAGP,YAAa;QAAA,uBACvD,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,UAAU,EAAC,MAAM;UAAC,KAAK,EAAC,MAAM;UAAA,UAC3D,CAAAQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,KAAK,CAACG,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,KAAIpB,cAAc,CAACoB,KAAK,CAAC,CAAC,EAAC,EAAE;QAAC;UAAA;UAAA;UAAA;QAAA;MAC9C;QAAA;QAAA;QAAA;MAAA,QACR,eACP,QAAC,IAAI;QAAC,EAAE,EAAEb,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEc,SAAS,GAAM,YAAWd,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,SAAU,EAAC,GAAGnB,cAAe;QAAA,uBACjF,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,UAAU,EAAC,MAAM;UAAC,KAAK,EAAC,MAAM;UAAA,WAC3D,CAAAK,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,YAAY,KAAIrB,gBAAgB,eAC1C,QAAC,WAAW;YAAC,EAAE,EAAE;cAACsB,QAAQ,EAAE,EAAE;cAAEC,KAAK,EAAE,MAAM;cAAEC,EAAE,EAAE;YAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAClD;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QAET;AAEX,CAAC;AAAA,KA7BKtB,SAAS;AA+Bf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}